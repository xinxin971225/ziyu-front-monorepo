{
  "script": {
    "scope": "vue",
    "prefix": "script",
    "body": ["<script>", "export default {", "\tname: '${0}'", "}", "</script>"],
    "description": "<script>"
  },
  "template": {
    "scope": "vue",
    "prefix": "template",
    "body": ["<template>", "\t${0}", "</template>"],
    "description": "<template>"
  },
  "style": {
    "scope": "vue",
    "prefix": "style",
    "body": ["<style lang=\"scss\" scoped>", "${0}", "</style>"],
    "description": "<style lang=\"scss\" scoped>"
  },
  "test": {
    "prefix": "test",
    "body": [
      "import { test, assert } from 'vitest'",
      "import { } from '../index'",
      "test('${0}', () => {",
      "\tassert.equal()",
      "})"
    ],
    "description": "Unit test block"
  },
  "inSourceTest": {
    "prefix": "inSourceTest",
    "body": [
      "if (import.meta.vitest) {",
      "\tconst { it, expect } = import.meta.vitest",
      "\tit('${0}', () => {",
      "\t\texpect().toBe()",
      "\t})",
      "}"
    ],
    "description": "inSourceTest吊吊的单测"
  },
  "ts-ignore": {
    "prefix": "ts-ignore",
    "body": ["// @ts-ignore"],
    "description": "@ts-ignore"
  },
  "setup": {
    "prefix": "setup",
    "body": ["setup(){", "\treturn () => h('${0}')", "}"],
    "description": "setup"
  },
  "scriptSetup": {
    "prefix": "scriptSetup",
    "body": ["<script setup lang=\"ts\">", "${0}", "</script>"],
    "description": "setup"
  },
  "testIt": {
    "prefix": "testIt",
    "body": ["it('${0}', () => {", "\texpect().toBe()", "})"],
    "description": "testIt"
  },
  "testDesc": {
    "prefix": "testDesc",
    "body": ["describe('${0}', () => {", "\ttest('', () => {", "\t\texpect().toBe()", "\t})", "})"],
    "description": "testDesc"
  }
}
